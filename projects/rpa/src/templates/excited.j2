j          =   {{ "%-20s"|format(param.j)            }} ! resulting j of ph-pairs
parity     =   {{ "%-20s"|format(param.parity)       }} ! parity of ph-pairs 1:+ 0:-
ediffmaxu  =   {{ "%-20s"|format('200.0')            }} ! maximal excitation-energy particles
ediffmaxd  =   {{ "%-20s"|format('2000.0')           }} ! maximal excitation-energy a-p
calc       =   {{ "%-20s"|format(param.calc)         }} ! 1:calc mat and exc. 0:only exc.
xyprint    =   {{ "%-20s"|format(param.xyprint)      }} ! saves xy-matrices on disk 1:yes 0:no
lorchange  =   {{ "%-20s"|format('0')                }} ! 1:only changing lorentz-curves
lorswidth  =   {{ "%-20s"|format('1.0')              }} ! width of isoscalar lorentz-curve
lorvwidth  =   {{ "%-20s"|format('1.0')              }} ! width of isovector lorentz-curve
hlorswidth =   {{ "%-20s"|format('1.0')              }} ! width of isoscalar hartree-lorentz-curve
hlorvwidth =   {{ "%-20s"|format('1.0')              }} ! width of isovector hartree-lorentz-curve
hartree    =   {{ "%-20s"|format('0')                }} ! solution also without interact.1:yes
matprint   =   {{ "%-20s"|format('0')                }} ! prints out RPA ascii-matrix yes:1no:0
xyread     =   {{ "%-20s"|format(param.xyread)       }} ! x- and y read in for further calc.
xyprobe    =   {{ "%-20s"|format(param.xyprobe)      }} ! making rpa-probe 1:yes 0:no
exccalc    =   {{ "%-20s"|format('1')                }} ! only calculating exc 1:yes 0:no
transdens  =   {{ "%-20s"|format('0')                }} ! calculate trans-dens1:yes0:no
transiso   =   {{ "%-20s"|format('0')                }} ! isosc:0 isovec:1 for tr-dens
transerg   =   {{ "%-20s"|format(param.transerg)     }} ! energy for tr-dens, specify 2 digits
tc_cur     =   {{ "%-20s"|format('0')                }} ! calculate transition-currents 1:yes 0:no
tc_iso     =   {{ "%-20s"|format('1')                }} ! isoscalar:0 isovector:1 for tr-cur
tc_erg     =   {{ "%-20s"|format('12.36')            }} ! energy for tr-curr, specify 2 digits
qptresh    =   {{ "%-20s"|format('0.01')             }} ! for lower occ inqp1noqp2-qp1pairs
respair    =   {{ "%-20s"|format('1')                }} ! 1:pairing in residual inter. 0:no
